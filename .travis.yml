# any time we make use of docker we have to have super user permissions to execute this build
sudo: required

# Make sure that travis CI understands that we need docker is pre-installed
services:
  - docker

# Series of commands which get executed before we deploye project or we run our test
# 1. we want to build our image before running test
before_install:
  - docker build -t anirudhapjoshi/docker-react -f dockerfile.dev .

# Series of commands we need to run our test
# travis will wach output of each command and if it is other than 0 meains test failed
# but tests never gets exited automatically, we have to use -- --coverage flag to get out
script:
  - docker run -e CI=true anirudhapjoshi/docker-react npm run test -- --coverage

# Travis CI comes with some pre-configured to deploy our application to a handfull of provider
# such as AWS or digital ocian etc.
# Reagion, AppName, env will get created while creating elasticbeanstalk instance
# need to set of API keys which allows to access aws account over travis cli 
deploy:
  provider: elasticbeanstalk
  region: "us-east-2"
  app: "docker-react-app"
  env: "DockerReactApp-env"
  bucket_name: "elasticbeanstalk-us-east-2-042391297430"
  bucket_path: "docker-react-app"
  on:
      branch: master
  access_key_id: "$AWS_ACCESS_KEY"
  secret_access_key: "$AWS_SECRET_KEY"